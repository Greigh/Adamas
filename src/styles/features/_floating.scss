@use "../base/variables" as *;
@use 'sass:map';

// Floating windows and popout functionality
.floating-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: map.get($z-index, modal);
}

.floating-window {
  position: fixed;
  z-index: 1000;
  background: var(--card-bg);
  border-radius: map.get($radius, lg);
  box-shadow: var(--shadow-lg);
  min-width: 300px;
  min-height: 200px;
  resize: both;
  overflow: auto;

  // Make pattern popups slightly narrower by default for readability
  &.pattern-popup {
    min-width: 360px;
    max-width: 540px;
  }

  .floating-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: map.get($spacing, 3);
    border-bottom: 1px solid var(--border-color);
    cursor: move;

    h3 {
      margin: 0;
      font-size: map.get($font-sizes, lg);
    }

    .floating-controls {
  display: flex;
  gap: map.get($spacing, 2);
  align-items: center;

      button {
        background: none;
        border: none;
        font-size: map.get($font-sizes, lg);
        cursor: pointer;
        padding: map.get($spacing, 1);
        border-radius: map.get($radius, base);
        transition: map.get($transitions, base);
        color: var(--gray-600);

        &:hover {
          background: var(--gray-200);
          color: var(--gray-800);
        }
      }
    }
  }

  .floating-content {
    padding: map.get($spacing, 4);
    max-height: 60vh;
    overflow-y: auto;

    // Improve contrast for results and inputs
    .input-group input,
    .input-group button,
    .pattern-result {
      background: transparent;
      color: var(--gray-900);
    }
  }

  &:hover {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }

  &.minimized {
    height: 40px !important;
    resize: horizontal;

    .floating-content {
      display: none;
    }
  }
}

// Popout button in section headers
.popup-btn {
  background: none;
  border: none;
  font-size: map.get($font-sizes, lg);
  cursor: pointer;
  padding: map.get($spacing, 1);
  border-radius: map.get($radius, base);
  transition: map.get($transitions, base);
  color: var(--gray-600);
  min-width: 28px;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover {
    background: var(--gray-200);
    color: var(--gray-800);
    transform: scale(1.1);
  }

  &:active {
    transform: scale(0.95);
  }

  // Different icons for different states
  &[title="Pop Out"]::before {
    content: "⧉";
  }

  &[title="Dock"]::before,
  &[title="Close Popup"]::before {
    content: "⧈";
  }
}

// Window resize handle
.floating-window::after {
  content: "";
  position: absolute;
  bottom: 0;
  right: 0;
  width: 20px;
  height: 20px;
  background: linear-gradient(
    -45deg,
    transparent 30%,
    var(--gray-400) 30%,
    var(--gray-400) 40%,
    transparent 40%,
    transparent 60%,
    var(--gray-400) 60%,
    var(--gray-400) 70%,
    transparent 70%
  );
  cursor: se-resize;
  pointer-events: auto;
}

// Animation for popout
@keyframes popout {
  0% {
    transform: scale(0.8) rotate(-5deg);
    opacity: 0;
  }
  50% {
    transform: scale(1.05) rotate(2deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }
}

.floating-window {
  animation: popout 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

// Dark mode
[data-theme="dark"] {
  .floating-window {
    background: var(--dark-surface);
    border-color: var(--dark-border);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.4);

    &:hover {
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
    }
  }

  .floating-header {
    background: var(--dark-bg);
    border-bottom-color: var(--dark-border);

    h3 {
      color: var(--dark-text);
    }
  }

  .floating-controls button {
    color: var(--dark-text-muted);

    &:hover {
      background: var(--dark-border);
      color: var(--dark-text);
    }

    &.close-btn:hover {
      background: var(--error);
      color: var(--white);
    }

    &.minimize-btn:hover {
      background: var(--warning);
      color: var(--white);
    }
  }

  .floating-content {
    &::-webkit-scrollbar-track {
      background: var(--dark-bg);
    }

    &::-webkit-scrollbar-thumb {
      background: var(--dark-border);

      &:hover {
        background: var(--dark-text-muted);
      }
    }
  }

  .popup-btn {
    color: var(--dark-text-muted);

    &:hover {
      background: var(--dark-border);
      color: var(--dark-text);
    }
  }

  .floating-window::after {
    background: linear-gradient(
      -45deg,
      transparent 30%,
      var(--dark-border) 30%,
      var(--dark-border) 40%,
      transparent 40%,
      transparent 60%,
      var(--dark-border) 60%,
      var(--dark-border) 70%,
      transparent 70%
    );
  }
}

// Subtle overlay backdrop (visible when floating windows exist)
.floating-overlay.visible {
  background: rgba(0,0,0,0.06);
  pointer-events: auto;
}

// Add mobile media queries at the end
@media (max-width: map.get($breakpoints, sm)) {
  .floating-window {
    width: 95% !important; // Override inline styles
    left: 2.5% !important;
    max-height: 80vh !important;
    min-width: 0;

    .floating-header {
      padding: map.get($spacing, 2);
    }

    .floating-content {
      padding: map.get($spacing, 2);
      max-height: calc(80vh - 50px); // Account for header
    }
  }
}
