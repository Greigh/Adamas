@use '../base/variables' as *;
@use 'sass:map';

// Form Components
input,
textarea,
select {
  background: var(--white);
  border: 2px solid var(--gray-200);
  border-radius: map.get($radius, base);
  padding: map.get($spacing, 2) map.get($spacing, 3);
  font-size: map.get($font-sizes, base);
  font-family: var(--font-sans); // Changed to CSS variable
  color: var(--gray-900);
  transition: map.get($transitions, base);
  width: 100%;

  &:focus {
    outline: none;
    border-color: var(--primary-blue);
    box-shadow: 0 0 0 1px var(--primary-blue);
  }

  &:disabled {
    background: var(--gray-100);
    border-color: var(--gray-200);
    color: var(--gray-500);
    cursor: not-allowed;
  }

  &::placeholder {
    color: var(--gray-400);
  }
}

textarea {
  resize: vertical;
  min-height: 100px;
  font-family: $font-family-sans;
}

label {
  display: block;
  font-weight: map.get($font-weights, medium);
  color: var(--gray-700);
  margin-bottom: map.get($spacing, 1);
}

.form-group {
  margin-bottom: map.get($spacing, 4);
}

.input-group {
  display: flex;
  gap: map.get($spacing, 2);
  align-items: end;
  margin-bottom: map.get($spacing, 4);

  label {
    display: flex;
    flex-direction: column;
    gap: map.get($spacing, 1);
    margin-bottom: 0;
  }

  input {
    flex: 1;
  }

  button {
    flex-shrink: 0;
  }
}

// Checkbox and radio styles
input[type="checkbox"],
input[type="radio"] {
  width: auto;
  margin-right: map.get($spacing, 2);
  accent-color: var(--primary-blue);
}

/* Switch styling */
.switch {
    position: relative;
    display: inline-block;
    width: 46px;
    height: 24px;
    margin: 2px 0;

    input {
        opacity: 0;
        width: 0;
        height: 0;
        margin: 0;
        
        &:checked + .slider {
            background-color: var(--primary-blue);
            
            &:before {
                transform: translateX(22px);
            }
        }
        
        &:focus + .slider {
            box-shadow: 0 0 1px var(--primary-blue);
        }
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: var(--gray-300);
        transition: .2s ease;
        border-radius: 24px;
        
        &:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: .2s ease;
            border-radius: 50%;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        &:hover:before {
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }
    }
}

/* Range control */
.range-control {
  display: flex;
  align-items: center;
  gap: map.get($spacing, 3);
  width: 100%;

  input[type="range"] {
    flex: 1;
    height: 4px;
    background: var(--gray-200);
    border-radius: map.get($radius, full);
    appearance: none;
    cursor: pointer;

    &::-webkit-slider-thumb {
      appearance: none;
      width: 16px;
      height: 16px;
      border-radius: 50%;
      background: var(--primary-blue);
      cursor: pointer;
      transition: map.get($transitions, base);

      &:hover {
        transform: scale(1.2);
      }
    }

    &::-moz-range-thumb {
      width: 16px;
      height: 16px;
      border: none;
      border-radius: 50%;
      background: var(--primary-blue);
      cursor: pointer;
      transition: map.get($transitions, base);

      &:hover {
        transform: scale(1.2);
      }
    }
  }

  span {
    min-width: 60px;
    text-align: right;
    font-family: $font-family-mono;
    font-size: map.get($font-sizes, sm);
    font-weight: map.get($font-weights, medium);
    color: var(--gray-600);
  }
}

// Dark mode
[data-theme="dark"] {
  input,
  textarea,
  select {
    background: var(--dark-surface);
    border-color: var(--dark-border);
    color: var(--dark-text);

    &:focus {
      border-color: #90caf9;
      box-shadow: 0 0 0 1px #90caf9;
    }

    &:disabled {
      background: var(--dark-bg);
      border-color: var(--dark-border);
      color: var(--dark-text-muted);
    }

    &::placeholder {
      color: var(--dark-text-muted);
    }
  }

  label {
    color: var(--dark-text);
  }

  .switch {
    .slider {
      background-color: var(--dark-border);
      
      &:before {
        background-color: var(--gray-200);
      }
    }
    
    input:checked + .slider {
      background-color: #90caf9;
    }
  }

  .range-control {
    input[type="range"] {
      background: var(--dark-border);

      &::-webkit-slider-thumb {
        background: #90caf9;
      }

      &::-moz-range-thumb {
        background: #90caf9;
      }
    }

    span {
      color: var(--dark-text-muted);
    }
  }
}

/* Setting item layout */
.setting-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 0;
    border-bottom: 1px solid var(--border-color);

    .setting-info {
        flex: 1;
        padding-right: 20px;
    }

    .setting-label {
        font-weight: 500;
        margin-bottom: 4px;
    }

    .setting-description {
        font-size: 0.875rem;
        color: var(--text-muted);
    }

    .setting-control {
        display: flex;
        align-items: center;
    }
}

@media (max-width: map.get($breakpoints, sm)) {
  input,
  textarea,
  select {
    padding: map.get($spacing, 1) map.get($spacing, 2);
    font-size: map.get($font-sizes, sm);
  }
  
  .input-group {
    flex-direction: column;
    gap: map.get($spacing, 1);
    
    label {
      width: 100%;
    }
    
    button {
      width: 100%;
      margin-top: map.get($spacing, 1);
    }
  }
  
  .range-control {
    flex-direction: column;
    align-items: start;
    
    input[type="range"] {
      width: 100%;
    }
    
    span {
      margin-top: map.get($spacing, 1);
      align-self: flex-end;
    }
  }
}
